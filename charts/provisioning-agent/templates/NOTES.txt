
CHART NAME: {{ .Chart.Name }}
CHART VERSION: {{ .Chart.Version }}
APP VERSION: {{ .Chart.AppVersion }}

Logs can be accessed by running this command:

  kubectl logs --tail 100 -f \
    --namespace {{ .Release.Namespace }} \
    -l "app.kubernetes.io/name={{ include "agent.name" . }},app.kubernetes.io/instance={{ .Release.Name }}"

{{- if .Values.ingresses }}

Following ingress URLS are available:
  {{- $endpoints := .Values.bindings }}
  {{- range $ingress := .Values.ingresses }}
  {{- if .enabled }}
  {{- $ingressEndpoints := .endpoints }}
  {{- $hostname := .hostname }}
  {{- $tls := .tls }}
  {{- range  $name, $mapping := $endpoints }}
  {{- if (has $name $ingressEndpoints) }}
  Visit http{{ if $tls }}s{{ end }}://{{ $hostname }}{{$ingress.prefix}}{{ $mapping.path }} to access the {{ $name }} api
  {{- end }}
  {{- end }}
  {{- end }}
  {{- end }}

{{- else if contains "NodePort" .Values.service.type }}
Get the application URLs by running these commands:
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")

  export NODE_PORT_DEFAULT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "agent.fullname" . }}}")

  echo "Visit http://$NODE_IP:$NODE_PORT_DEFAULT to access the default api"

{{- else if contains "ClusterIP" .Values.service.type }}
Get the application URL by running these commands:

  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "agent.name" . }},app.kubernetes.io/instance={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")

  export CONTAINER_PORT_DEFAULT=$(kubectl get pod --namespace {{ .Release.Namespace }} $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")

  echo "Visit http://127.0.0.1:8081 to access the default api"

  kubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME \
    8081:$CONTAINER_PORT_DEFAULT 

{{- end }}
